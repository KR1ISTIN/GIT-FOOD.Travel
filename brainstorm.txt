Git Food.Travel (Title)

Wireframe: https://wireframe.cc/egIqsm

Description:
User is able to input a city and that city will pop up with hotels and restruants of user choice 

User Story: As a travler
I want a site that can help me find hotels and a variety of restaurants
Then I can save them to my favorite list 
So that I can start planning

Acceptance Criteria:
GIVEN when the page loads, the title and description of the site is presented
WHEN the travler is ready to start their search for either a hotel or restaurants, the travler will navigate to one of the search boxes of their choice.
The two search boxes are: hotel and restaurnats
AND when the travler enters a city name in one of the boxes
THEN hotels will pop up below in one column
THEN when traveler searches for restaurants, they will pop up in column two
WHEN the traveler clicks the save button
THEN the favorite will be added to the favorite list found in the navbar
THEN favorites will be added to localStorage

Project Requirements:
Use a CSS framework other than Bootstrap. 
Be deployed to GitHub Pages.
Be interactive (i.e., accept and respond to user input).
Use at least two server-side APIs.
Does not use alerts, confirms, or prompts (use modals).
Use client-side storage to store persistent data.
Be responsive.
Have a polished UI.
Have a clean repository that meets quality coding standards (file structure, naming conventions, follows best practices for class/id naming conventions, indentation, quality comments, etc.).
Have a quality README (with unique name, description, technologies used, screenshot, and link to deployed application).

Restaurant API
site for API: https://rapidapi.com/apidojo/api/travel-advisor/
Fetch calls:
 first call: https://travel-advisor.p.rapidapi.com/locations/search?query=san%20antonio&limit=30&offset=0&units=km&location_id=1&currency=USD&sort=relevance&lang=en_US  // this one has to be called first to get the location that the user put it, and then grab the location ID
 second call: https://travel-advisor.p.rapidapi.com/restaurants/list?location_id=60956&restaurant_tagcategory=10591&restaurant_tagcategory_standalone=10591&currency=USD&lunit=km&limit=30&min_rating=4.5&open_now=false&lang=en_US // this one is need after the first call bc it requires the location ID as a parameter to load the restaurants with a 4.5 rating or more
 
Hotel API:
site for API: https://rapidapi.com/tipsters/api/priceline-com-provider/
Fetch calls: 
 first call: https://priceline-com-provider.p.rapidapi.com/v1/hotels/locations?name=dallas&search_type=CITY // have to make this call first to get the city ID of whatever the user typed in, SO THEN we can access the hotels in that city
 second call: https://priceline-com-provider.p.rapidapi.com/v1/hotels/search?date_checkout=2023-07-23&sort_order=STAR&date_checkin=2023-07-22&location_id=3000035821&star_rating_ids=4.5%2C5.0&rooms_number=1 // this link will allow access to the hotels in the city


Overall: 
user needs to be able to search for hotels and restaurants
    A) will need two input boxes
        1) one for hotels
        2) one for restaurants
        3) going to need check in and check out dates
            -get values
            -use template literals
            -get check in and out date value and use them in the fetch url parameter
WHEN the user types in a city THEN clicks the search button
    A) Will need a event listener for food search button- user enters a city
        1)fetch calls will be made
    B) Need to clear the search box after the search button is clicked
    C) hotel search does not need a search button due to fetch call
        1) due to the fetch call parameters, we need to get the value from the city in the hotel input, 
        and combine it in the fetch call with the location ID, and the input values from check in and check wil also be called
        THEN when they hit the submit TEHN the hotels will populate 
LAYOUT for Body:
    A) two columns are needed. 
        1) one for restaurants
        2) one for hotels 
    B) Data will be placed on cards
        1) includes hotel name
        2) includes hotel description 
        1) restaurant name 
        2) restaurant description 
    C) Inside the container create 2 columns
        1) inside each column horizontal cards are needed (maybe 5 on each side)
        2)buttons are the side of each card so user can press to add to favorite
            - the favorite button will need a event listener 
            -maybe the button will change if clicked (if there is time)
            -when added to favorites, it also needs to be added to localStoreage
                -localStorage will probably need to use JSON pase and stringify since favorites will need to be added in an array in localStorage

1) user types in city for food
- add cick event on that that search button 
- the value needs to get passed in from search bar 
-

